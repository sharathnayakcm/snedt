:javascript
  $j(document).ready(function(){
     $('type').selectedIndex = 0;
     $j('#service_list').hide();
  });
  function validate() {
    if(jQuery.trim($j('#pg_name input').val()).length == 0)
    {
      notice('Post service group name can not be blank');
      return false;
    }
    else
    {
      if($('type').selectedIndex == 0)
      {
        notice('Please select a post type from the list');
        return false;
      }
      else
      {
        $j('#spinner_tag').show();
        return  true;
      }
    }
  }
.left_content_mid_align
  #stream_content
    .group_heading
      == Post Service Groups
    .group_table
    .group_table_heading
      .heading1
        %h5 Post group name
      .heading2
        %h5 Post type
      .heading3
        %h5 Services
      .heading4
        %h5 Action
    - @post_service_groups.each do |post_service_group|
      .row1
        .data1
          %p
            = post_service_group.name
        .data2
          %p
            = post_service_group.post_type.name
        .data3
          .icon1
            - user_groups = post_service_group.user_service_ids.to_s.split(",")
            - user_services = UserService.find_all_by_id(user_groups)
            - unless user_services.blank?
              - user_services.each do |user_service|
                = image_tag("services/#{user_service.service.name.downcase}.png" , :style => "width:20px;" , :title => "#{user_service.display_name}")
        .data4
          .edit_icon
            = link_to image_tag("/images_1/edit.png"),  edit_post_service_group_path(post_service_group)
          .delete_icon
            = link_to_remote_redbox(image_tag("/images_1/delete.png"), :url => {:controller => :post_service_groups, :action => :delete_confirm, :id => post_service_group.id}) unless post_service_group.blank?
    .edit_service_group_div
      .esg_heading
        %h4.normal_font
          == Add new service group
      .box
        .top_left_curve
          %img{:src => "/images_1/top_left_curve.png"}
        .top_mid
        .top_right_curve
          %img{:src => "/images_1/top_right_curve.png"}
        .box_mid
          - form_remote_tag( :url => {:controller => :post_service_groups, :action => :create }, :html => {:id => "psgForm"}) do
            .pg_div
              .group_name_div
                .group_name
                  %h5.normal_font
                    = t(:post_group_name)
                .group_name_field#pg_name
                  = text_field_tag "pg_name", ""
              .your_privacy_groups_div.members
                .your_privacy_groups
                  %h5.normal_font
                    = t(:your_post_type)
                .psg
                  = select_tag "type", "<option value=>#{t :pick_type}</option>" + options_from_collection_for_select(@pick_types,:id,:name), :class => "rounded", :onchange => remote_function(:url => {:action => :load_service_list}, :with => "'type=' + $('type').value")
              .services#service_list
                = render :partial => "post_service_groups/services_list"
              .psg_buttons
                .button.button_anchor{:style=> "margin-top: 3px;"}
                  = link_to t(:cancel), root_url
                = submit_tag t(:save), :class => "button",  :onclick => "return validate();"
                %div.display_none.left{:id => "spinner_tag"}
                  = image_tag("spinner.gif")
                .clear
              .clear
        .clear
        .bottom_left_curve
          %img{:src => "/images_1/bottom_left_curve.png"}
        .bottom_mid
        .bottom_right_curve
          %img{:src => "/images_1/bottom_right_curve.png"}