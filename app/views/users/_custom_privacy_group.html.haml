- form_remote_tag(:url => {:controller => :privacy_groups, :action => :create, :tab => "privacy" }, :html => {:id => "pgForm"}) do
  = hidden_field_tag :privacy_user_ids, ""
  %ul
    %li
      %label{:for => "group"}
        =t :privacy_group_name
      %input.textInput{:name => "pg_name", :id => "pg_name", :type => "text", :value => ""}
    %li
      %label{:for => "userSelect"}
        =t :select_by_username
      %input.textInput{:name => "search_user_name", :type => "text", :value => "",:id => "search_user_name"}
      = observe_field("search_user_name", :update => 'name_observed',:frequency => 0.5, :url => {:controller => "privacy_groups",:action => "get_names_for_privacy_tab", :method => :get},:with => "input_first_name", :loading => "{$j('#spinner_tag1').show();}", :success => "{$j('#spinner_tag1').hide();}")
      %span.streamLoad#spinner_tag1.hide
        %img{:alt => "", :src => "/images/loadinfo.gif"}
      #name_observed.nameObserved
    
    #added_users
    %li.savePrivacy.last
      .yellowBtn.flRight
        %a.smlrBtn{:href => "javascript:void(0)", :onclick => "$('pgForm').reset();$j('#added_users').html('');$j('#privacy_user_ids').val('');toggle_visibility('personalPrivacySetting');"} Cancel
      .blueBtn.flRight
        = submit_tag "#{t :save}", :class => "smlrBtn", :onclick => "if(jQuery.trim($j('#pg_name').val()).length == 0){notice('Privacy group name can not be blank');return false;}else{$j('#spinner_tag').show();}"
